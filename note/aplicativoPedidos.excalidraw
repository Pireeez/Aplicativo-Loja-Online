{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "y2CeUnFzau_B3m0nJGadW",
      "type": "text",
      "x": 351.6666666666665,
      "y": 182.74999999999997,
      "width": 687.1414272732203,
      "height": 155.83333333333331,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a1",
      "roundness": null,
      "seed": 1941998120,
      "version": 449,
      "versionNonce": 1254755928,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1757697737577,
      "link": null,
      "locked": false,
      "text": "Aplicativo de Pedidos\n    - Dividido em duas frentes:\n        - Cadastras Categorias e Produtos e consultar Pedidos\n        - Exibir os Produtos em Categorias \n        (onde o usuário pode pesquisar e inserir em um carrinho)\n        (Depois Inserir os itens no carrinho, ele pode gerar o pedido)",
      "fontSize": 20.777777777777786,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Aplicativo de Pedidos\n    - Dividido em duas frentes:\n        - Cadastras Categorias e Produtos e consultar Pedidos\n        - Exibir os Produtos em Categorias \n        (onde o usuário pode pesquisar e inserir em um carrinho)\n        (Depois Inserir os itens no carrinho, ele pode gerar o pedido)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "XdPHwMWK8hz5YesfkCxaY",
      "type": "text",
      "x": 351.66666666666686,
      "y": 361.08333333333326,
      "width": 667.859619140625,
      "height": 575,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a2",
      "roundness": null,
      "seed": 2088819032,
      "version": 1037,
      "versionNonce": 1777609000,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1757697235490,
      "link": null,
      "locked": false,
      "text": "Protótipos com interface:\n    - Frente 1 (Backoffice)\n    - Frente 2 (Loja Desk)\n    - Frente 3 (Loja Mobile)\n\n    - Frente 2 e 3: \n        - Mesmo app\n        - responsividade diferentes (um pra mobile e outra desktop)\n    - Frente 1:\n        - Deve ter 3 abas:\n            - Duas primeiras Abas são responsáveis:\n                Pelo cadastro e att de categorias e produtos\n                Criação e att devem ser realizados por modais \n                Não terá a parte de exclusão\n                Itens ficarão visíveis ou não\n\n            - Terceira aba são responsáveis: \n                Todos os pedidos realizado pela frente 2\n                Usuário pode realizar o filtro:\n                    - Data do Pedido\n                    - Range de Valores totais do pedido \n                    (Ao clicar em um pedido, abrirá um modal que permiti \n                    a visualização dos itens daquele pedido)",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Protótipos com interface:\n    - Frente 1 (Backoffice)\n    - Frente 2 (Loja Desk)\n    - Frente 3 (Loja Mobile)\n\n    - Frente 2 e 3: \n        - Mesmo app\n        - responsividade diferentes (um pra mobile e outra desktop)\n    - Frente 1:\n        - Deve ter 3 abas:\n            - Duas primeiras Abas são responsáveis:\n                Pelo cadastro e att de categorias e produtos\n                Criação e att devem ser realizados por modais \n                Não terá a parte de exclusão\n                Itens ficarão visíveis ou não\n\n            - Terceira aba são responsáveis: \n                Todos os pedidos realizado pela frente 2\n                Usuário pode realizar o filtro:\n                    - Data do Pedido\n                    - Range de Valores totais do pedido \n                    (Ao clicar em um pedido, abrirá um modal que permiti \n                    a visualização dos itens daquele pedido)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "pYA3Ubvh_zFBWtYVAA0Hx",
      "type": "text",
      "x": 316.6666666666667,
      "y": 955.2499999999998,
      "width": 733.1595458984375,
      "height": 550,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a3",
      "roundness": null,
      "seed": 17432360,
      "version": 457,
      "versionNonce": 687987544,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1757697485570,
      "link": null,
      "locked": false,
      "text": "Regras no Cadastro de Categorias:\n\n    - Não pode ter duas categorias com o mesmo nome (considerar acentos)\n    tanto na atualização quanto na criação\n\n    - Não pode ser possível criar uma categoria sem nome\n\n\nRegras no Cadastro de Produtos:\n\n    - O nome do produto deve estar preenchido\n    - Não pode ter dois produtos com o mesmo nome\n    - Deve ter uma categoria selecionada\n    - Não pode ter preço negativo\n    - Não pode ter estoque negativo\n    - Preço e estoque devem ser preenchidos\n    - O estoque total de todos os produtos de uma mesma \n    categoria não pode passar 100\n    - O campo de preço deve seguir a máscara monetária \n    com o símbolo \"R$\" prefixado.\n\n",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Regras no Cadastro de Categorias:\n\n    - Não pode ter duas categorias com o mesmo nome (considerar acentos)\n    tanto na atualização quanto na criação\n\n    - Não pode ser possível criar uma categoria sem nome\n\n\nRegras no Cadastro de Produtos:\n\n    - O nome do produto deve estar preenchido\n    - Não pode ter dois produtos com o mesmo nome\n    - Deve ter uma categoria selecionada\n    - Não pode ter preço negativo\n    - Não pode ter estoque negativo\n    - Preço e estoque devem ser preenchidos\n    - O estoque total de todos os produtos de uma mesma \n    categoria não pode passar 100\n    - O campo de preço deve seguir a máscara monetária \n    com o símbolo \"R$\" prefixado.\n\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "42hDlRWLF10Ae2lC7cmyk",
      "type": "text",
      "x": 316.6666666666667,
      "y": 1483.5833333333333,
      "width": 662.6795043945312,
      "height": 125,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a4",
      "roundness": null,
      "seed": 1182725928,
      "version": 358,
      "versionNonce": 1131518760,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1757697728531,
      "link": null,
      "locked": false,
      "text": "Frente 2 dever ser um app que:\n    - Usuário adiciona no carrinho produtos cadastrados na frente 1\n    - Produtos devem estar divididos pela categoria deles\n    - Permitir pesquisar pelo nome do produto na barra de busca\n    - Ao clicar no produto, add ele no carrinho cliente",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Frente 2 dever ser um app que:\n    - Usuário adiciona no carrinho produtos cadastrados na frente 1\n    - Produtos devem estar divididos pela categoria deles\n    - Permitir pesquisar pelo nome do produto na barra de busca\n    - Ao clicar no produto, add ele no carrinho cliente",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "19_ePng-tsrxBz0Q2OamE",
      "type": "text",
      "x": 316.66666666666674,
      "y": 1640.2500000000002,
      "width": 1973.2386474609375,
      "height": 875,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a5",
      "roundness": null,
      "seed": 2097422936,
      "version": 789,
      "versionNonce": 1383926360,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1757699481345,
      "link": null,
      "locked": false,
      "text": "Botão Carrinho:\n    - ficará como um FAB(Floating Action Button\n    - No canto inferior direito da tabela do usuário de maneira fixa\n    quando realizar scrol na tela o btn fica fixo no lugar\n    - click nele abrirá uma tela nova com todos os itens do carrinho\n\nNo Carrinho do usuário:\n    - Podera remover um item dele\n    - Alterar sua quantidade\n    - Visualizar totais\n    - Finalizar o pedido pedido e limpando o carrinho\n    - Criando o registro como pedido na Frente 1\n   \nRegras da Frente 2:\n    - Não pode adicionar um item que está sem estoque no carrinho\n    - Não pode adicionar uma quantidade maior que o estoque disponível do produto\n    - Os itens do carrinho devem se manter se o usuário abrir e fechar \n    a tela (salvar no banco)\n\n\nCampos de preços devem ser salvos como REAL no banco, \ne os de data como DATE. Sua exibição deve ser formatada.\nNa Frente 1, no cadastro de produtos, existe um campo de imagem. \nO upload de imagem pode ser uma missão meio difícil no começo, \nentão ele não será cobrado como obrigatório. Caso queira tentar, \nbusque como realizar o envio de um arquivo utilizando Axios ou Fetch, \ne sobre upload com o Multer no Express.\nAmbas as Frentes devem ser responsivas. \nA Frente 1 não precisa se preocupar em deixar compatível com mobile, \nvisto que ela é focada para Desktops. A Frente 2 deve estar \nadaptada tanto para Mobile quanto para Desktops.\nDeve seguir o protótipo da maneira que foi definida no Canvas, seguindo os mesmos campos e locais, além das mesmas navegações. Se achar que dá para fazer de outra forma, só avisar para verificarmos.\nObrigado e boa sorte =)\n\n",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Botão Carrinho:\n    - ficará como um FAB(Floating Action Button\n    - No canto inferior direito da tabela do usuário de maneira fixa\n    quando realizar scrol na tela o btn fica fixo no lugar\n    - click nele abrirá uma tela nova com todos os itens do carrinho\n\nNo Carrinho do usuário:\n    - Podera remover um item dele\n    - Alterar sua quantidade\n    - Visualizar totais\n    - Finalizar o pedido pedido e limpando o carrinho\n    - Criando o registro como pedido na Frente 1\n   \nRegras da Frente 2:\n    - Não pode adicionar um item que está sem estoque no carrinho\n    - Não pode adicionar uma quantidade maior que o estoque disponível do produto\n    - Os itens do carrinho devem se manter se o usuário abrir e fechar \n    a tela (salvar no banco)\n\n\nCampos de preços devem ser salvos como REAL no banco, \ne os de data como DATE. Sua exibição deve ser formatada.\nNa Frente 1, no cadastro de produtos, existe um campo de imagem. \nO upload de imagem pode ser uma missão meio difícil no começo, \nentão ele não será cobrado como obrigatório. Caso queira tentar, \nbusque como realizar o envio de um arquivo utilizando Axios ou Fetch, \ne sobre upload com o Multer no Express.\nAmbas as Frentes devem ser responsivas. \nA Frente 1 não precisa se preocupar em deixar compatível com mobile, \nvisto que ela é focada para Desktops. A Frente 2 deve estar \nadaptada tanto para Mobile quanto para Desktops.\nDeve seguir o protótipo da maneira que foi definida no Canvas, seguindo os mesmos campos e locais, além das mesmas navegações. Se achar que dá para fazer de outra forma, só avisar para verificarmos.\nObrigado e boa sorte =)\n\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "_jtAIPwzXTpHjKmaHA3oS",
      "type": "text",
      "x": 1570.1785714285702,
      "y": -82.78571428571632,
      "width": 271.63983154296875,
      "height": 350,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aA",
      "roundness": null,
      "seed": 1516969768,
      "version": 267,
      "versionNonce": 521992488,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1757699669860,
      "link": null,
      "locked": false,
      "text": "Backend:\n - Estrutar nosso ambiente:\n    arquivo Controller\n    Database\n    schema.sql\n    index.js\n    banco_Dados.db\n    Routes\n - Instalação:\n    npm\n    sqlite3\n    node\n    dotenv\n    ",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Backend:\n - Estrutar nosso ambiente:\n    arquivo Controller\n    Database\n    schema.sql\n    index.js\n    banco_Dados.db\n    Routes\n - Instalação:\n    npm\n    sqlite3\n    node\n    dotenv\n    ",
      "autoResize": true,
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#ffffff",
    "lockedMultiSelections": {}
  },
  "files": {}
}